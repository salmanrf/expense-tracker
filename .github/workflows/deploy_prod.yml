name: Build and Deploy To Production

on:
  push:
    branches:
      - main
      - feat/cicd
    pull_request:
      - feat/cicd

jobs:
  create-docker-image:
    name: Build and push the Docker image to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_IAM_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_IAM_SECRET_ACCES_KEY }}
          aws-region: us-east-1

      - name: Log into the Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Build, tag, and push docker image to Amazon ECR Public
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: t0s2y8w6
          REPOSITORY: expense-tracker
          IMAGE_TAG: expense-tracker
        run: |
          docker build -t $IMAGE_TAG .
          docker tag $IMAGE_TAG:latest $REGISTRY/$REGISTRY_ALIAS/$IMAGE_TAG:latest
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:latest

  #

  deploy:
    name: Deploy the new Docker image to ECS
    runs-on: ubuntu-latest
    needs: create-docker-image
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_IAM_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_IAM_SECRET_ACCES_KEY }}
          aws-region: ap-southeast-1

      - name: Update ECS service
        run: |
          aws ecs update-service --cluster expense_tracker --service expense-tracker --task-definition expense_tracker_task:9 --force-new-deployment
